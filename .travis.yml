language: haskell
env:
    - CUDA=7.0-28 GHC=7.6.3
    - CUDA=7.0-28 GHC=7.8.4
    - CUDA=7.0-28 GHC=7.10.1
    - CUDA=6.5-14 GHC=7.6.3
    - CUDA=6.5-14 GHC=7.8.4
    - CUDA=6.5-14 GHC=7.10.1
#    - CUDA=6.0-37

before_script:
    # If travis doesn't have the version of GHC that we want, get it from hvr's PPA
    - echo "Setting up GHC"
    - export PATH=/usr/local/ghc/$(ghc_find ${GHC%.*})/bin:${PATH}
    - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
    - travis_retry sudo apt-get update -qq
    - |
        if [ $(ghc --numeric-version) != ${GHC} ]; then
            travis_retry sudo apt-get install ghc-${GHC}
            export PATH=/opt/ghc/${GHC}/bin:${PATH}
        fi
    - | # GHC-7.8 and later require a newer version of happy and alex
        if [ ${GHC%.*} != 7.6 ]; then
            travis_retry sudo apt-get install happy-1.19.4 alex-3.1.3
            export PATH=/opt/alex/3.1.3/bin:/opt/happy/1.19.4/bin:${PATH}
        fi
    - cabal install c2hs

    - echo "Installing CUDA library"
    - travis_retry wget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1204/x86_64/cuda-repo-ubuntu1204_${CUDA}_amd64.deb
    - travis_retry sudo dpkg -i cuda-repo-ubuntu1204_${CUDA}_amd64.deb
    - travis_retry sudo apt-get update -qq
    - travis_retry sudo apt-get install -y cuda
    - export CUDA_HOME=/usr/local/cuda-${CUDA%%-*}
    - export LD_LIBRARY_PATH=${CUDA_HOME}/lib64
    - export PATH=${CUDA_HOME}/bin:${PATH}

script:
    - cabal configure -v2
    - cabal build
    - cabal install

after_script:
    - nvidia-device-query
    - ls -l /usr/local/ghc/

